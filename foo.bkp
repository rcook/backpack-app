-- http://blog.ezyang.com/2016/10/try-backpack-ghc-backpack/

unit foo-indef where
    signature Str where
        data Str
        len :: Str -> Int

    module Foo (theLength) where
        import Str

        theLength :: Str -> Int
        theLength = len

unit foo-string where
    module Str where
        type Str = String

        len :: Str -> Int
        len = length

unit foo-int where
    module Str where
        type Str = [Int]

        len :: Str -> Int
        len = length

unit main where
    dependency foo-indef[Str=foo-int:Str] (Foo as Foo.Int)
    dependency foo-indef[Str=foo-string:Str] (Foo as Foo.String)

    module Main (main) where
        import qualified Foo.Int
        import qualified Foo.String

        main :: IO ()
        main = do
            print $ Foo.String.theLength "Hello world"
            print $ Foo.Int.theLength [1, 2, 3]
